// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AgentAttached extends ethereum.Event {
  get params(): AgentAttached__Params {
    return new AgentAttached__Params(this);
  }
}

export class AgentAttached__Params {
  _event: AgentAttached;

  constructor(event: AgentAttached) {
    this._event = event;
  }

  get agent(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get agentType(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class FundingProposalCreated extends ethereum.Event {
  get params(): FundingProposalCreated__Params {
    return new FundingProposalCreated__Params(this);
  }
}

export class FundingProposalCreated__Params {
  _event: FundingProposalCreated;

  constructor(event: FundingProposalCreated) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get description(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class IndividualAdded extends ethereum.Event {
  get params(): IndividualAdded__Params {
    return new IndividualAdded__Params(this);
  }
}

export class IndividualAdded__Params {
  _event: IndividualAdded;

  constructor(event: IndividualAdded) {
    this._event = event;
  }

  get individual(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get skills(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OrganizationAdded extends ethereum.Event {
  get params(): OrganizationAdded__Params {
    return new OrganizationAdded__Params(this);
  }
}

export class OrganizationAdded__Params {
  _event: OrganizationAdded;

  constructor(event: OrganizationAdded) {
    this._event = event;
  }

  get organization(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get expertise(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TaskAssignedToIndividual extends ethereum.Event {
  get params(): TaskAssignedToIndividual__Params {
    return new TaskAssignedToIndividual__Params(this);
  }
}

export class TaskAssignedToIndividual__Params {
  _event: TaskAssignedToIndividual;

  constructor(event: TaskAssignedToIndividual) {
    this._event = event;
  }

  get individualIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get task(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class TaskAssignedToOrganization extends ethereum.Event {
  get params(): TaskAssignedToOrganization__Params {
    return new TaskAssignedToOrganization__Params(this);
  }
}

export class TaskAssignedToOrganization__Params {
  _event: TaskAssignedToOrganization;

  constructor(event: TaskAssignedToOrganization) {
    this._event = event;
  }

  get orgIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get task(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Disaster__agentsResult {
  value0: Address;
  value1: i32;

  constructor(value0: Address, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    return map;
  }

  getAgentAddress(): Address {
    return this.value0;
  }

  getAgentType(): i32 {
    return this.value1;
  }
}

export class Disaster__getAgentsResultValue0Struct extends ethereum.Tuple {
  get agentAddress(): Address {
    return this[0].toAddress();
  }

  get agentType(): i32 {
    return this[1].toI32();
  }
}

export class Disaster extends ethereum.SmartContract {
  static bind(address: Address): Disaster {
    return new Disaster("Disaster", address);
  }

  agents(param0: BigInt): Disaster__agentsResult {
    let result = super.call("agents", "agents(uint256):(address,uint8)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Disaster__agentsResult(result[0].toAddress(), result[1].toI32());
  }

  try_agents(param0: BigInt): ethereum.CallResult<Disaster__agentsResult> {
    let result = super.tryCall("agents", "agents(uint256):(address,uint8)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Disaster__agentsResult(value[0].toAddress(), value[1].toI32()),
    );
  }

  dao(): Address {
    let result = super.call("dao", "dao():(address)", []);

    return result[0].toAddress();
  }

  try_dao(): ethereum.CallResult<Address> {
    let result = super.tryCall("dao", "dao():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAgents(): Array<Disaster__getAgentsResultValue0Struct> {
    let result = super.call("getAgents", "getAgents():((address,uint8)[])", []);

    return result[0].toTupleArray<Disaster__getAgentsResultValue0Struct>();
  }

  try_getAgents(): ethereum.CallResult<
    Array<Disaster__getAgentsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAgents",
      "getAgents():((address,uint8)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Disaster__getAgentsResultValue0Struct>(),
    );
  }

  getIndividualsCount(): BigInt {
    let result = super.call(
      "getIndividualsCount",
      "getIndividualsCount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getIndividualsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIndividualsCount",
      "getIndividualsCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrganizationsCount(): BigInt {
    let result = super.call(
      "getOrganizationsCount",
      "getOrganizationsCount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getOrganizationsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOrganizationsCount",
      "getOrganizationsCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  individuals(param0: BigInt): Address {
    let result = super.call("individuals", "individuals(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toAddress();
  }

  try_individuals(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "individuals",
      "individuals(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  latitude(): BigInt {
    let result = super.call("latitude", "latitude():(int256)", []);

    return result[0].toBigInt();
  }

  try_latitude(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("latitude", "latitude():(int256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  longitude(): BigInt {
    let result = super.call("longitude", "longitude():(int256)", []);

    return result[0].toBigInt();
  }

  try_longitude(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("longitude", "longitude():(int256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  organizations(param0: BigInt): Address {
    let result = super.call(
      "organizations",
      "organizations(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toAddress();
  }

  try_organizations(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "organizations",
      "organizations(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  timestamp(): BigInt {
    let result = super.call("timestamp", "timestamp():(uint256)", []);

    return result[0].toBigInt();
  }

  try_timestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("timestamp", "timestamp():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _latitude(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _longitude(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _firstAgent(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _firstAgentType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _daoAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddIndividualCall extends ethereum.Call {
  get inputs(): AddIndividualCall__Inputs {
    return new AddIndividualCall__Inputs(this);
  }

  get outputs(): AddIndividualCall__Outputs {
    return new AddIndividualCall__Outputs(this);
  }
}

export class AddIndividualCall__Inputs {
  _call: AddIndividualCall;

  constructor(call: AddIndividualCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _skills(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddIndividualCall__Outputs {
  _call: AddIndividualCall;

  constructor(call: AddIndividualCall) {
    this._call = call;
  }
}

export class AddOrganizationCall extends ethereum.Call {
  get inputs(): AddOrganizationCall__Inputs {
    return new AddOrganizationCall__Inputs(this);
  }

  get outputs(): AddOrganizationCall__Outputs {
    return new AddOrganizationCall__Outputs(this);
  }
}

export class AddOrganizationCall__Inputs {
  _call: AddOrganizationCall;

  constructor(call: AddOrganizationCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _expertise(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddOrganizationCall__Outputs {
  _call: AddOrganizationCall;

  constructor(call: AddOrganizationCall) {
    this._call = call;
  }
}

export class AssignTaskToIndividualCall extends ethereum.Call {
  get inputs(): AssignTaskToIndividualCall__Inputs {
    return new AssignTaskToIndividualCall__Inputs(this);
  }

  get outputs(): AssignTaskToIndividualCall__Outputs {
    return new AssignTaskToIndividualCall__Outputs(this);
  }
}

export class AssignTaskToIndividualCall__Inputs {
  _call: AssignTaskToIndividualCall;

  constructor(call: AssignTaskToIndividualCall) {
    this._call = call;
  }

  get _individualIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _task(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AssignTaskToIndividualCall__Outputs {
  _call: AssignTaskToIndividualCall;

  constructor(call: AssignTaskToIndividualCall) {
    this._call = call;
  }
}

export class AssignTaskToOrganizationCall extends ethereum.Call {
  get inputs(): AssignTaskToOrganizationCall__Inputs {
    return new AssignTaskToOrganizationCall__Inputs(this);
  }

  get outputs(): AssignTaskToOrganizationCall__Outputs {
    return new AssignTaskToOrganizationCall__Outputs(this);
  }
}

export class AssignTaskToOrganizationCall__Inputs {
  _call: AssignTaskToOrganizationCall;

  constructor(call: AssignTaskToOrganizationCall) {
    this._call = call;
  }

  get _orgIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _task(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AssignTaskToOrganizationCall__Outputs {
  _call: AssignTaskToOrganizationCall;

  constructor(call: AssignTaskToOrganizationCall) {
    this._call = call;
  }
}

export class AttachAgentCall extends ethereum.Call {
  get inputs(): AttachAgentCall__Inputs {
    return new AttachAgentCall__Inputs(this);
  }

  get outputs(): AttachAgentCall__Outputs {
    return new AttachAgentCall__Outputs(this);
  }
}

export class AttachAgentCall__Inputs {
  _call: AttachAgentCall;

  constructor(call: AttachAgentCall) {
    this._call = call;
  }

  get _agent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _agentType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class AttachAgentCall__Outputs {
  _call: AttachAgentCall;

  constructor(call: AttachAgentCall) {
    this._call = call;
  }
}

export class CreateFundingProposalCall extends ethereum.Call {
  get inputs(): CreateFundingProposalCall__Inputs {
    return new CreateFundingProposalCall__Inputs(this);
  }

  get outputs(): CreateFundingProposalCall__Outputs {
    return new CreateFundingProposalCall__Outputs(this);
  }
}

export class CreateFundingProposalCall__Inputs {
  _call: CreateFundingProposalCall;

  constructor(call: CreateFundingProposalCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateFundingProposalCall__Outputs {
  _call: CreateFundingProposalCall;

  constructor(call: CreateFundingProposalCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
